-- Categories Table
CREATE TABLE categories (
    category_id          SMALLINT NOT NULL,
    category_name        VARCHAR2(15) NOT NULL,
    ctgs_description     VARCHAR2(500),
    CONSTRAINT pk_categories PRIMARY KEY (category_id)
);

-- Regions Table
CREATE TABLE regions (
    region_id       SMALLINT NOT NULL,
    region_name     VARCHAR2(20) NOT NULL,
    CONSTRAINT pk_regions PRIMARY KEY (region_id)
);

-- Cities Table
CREATE TABLE cities (
    city_id         VARCHAR2(20) NOT NULL,
    city_name       VARCHAR2(20) NOT NULL,
    region_id       SMALLINT NOT NULL,
    CONSTRAINT pk_cities PRIMARY KEY (city_id),
    CONSTRAINT fk_cities_region FOREIGN KEY (region_id) REFERENCES regions(region_id)
);

-- Address Table
CREATE TABLE address (
    address_id      SMALLINT NOT NULL,
    street_address  VARCHAR2(60),
    city_id         VARCHAR2(20) NOT NULL,
    postal_code     VARCHAR2(10),
    country         VARCHAR2(15),
    phone           VARCHAR2(24),
    CONSTRAINT pk_address PRIMARY KEY (address_id),
    CONSTRAINT fk_address_city FOREIGN KEY (city_id) REFERENCES cities(city_id)
);

-- Customers Table
CREATE TABLE customers (
    customer_id     SMALLINT NOT NULL,
    last_name       VARCHAR2(20) NOT NULL,
    first_name      VARCHAR2(10) NOT NULL,
    birth_date      DATE,
    address_id      SMALLINT,
    CONSTRAINT pk_customers PRIMARY KEY (customer_id),
    CONSTRAINT fk_customers_address FOREIGN KEY (address_id) REFERENCES address(address_id)
);

-- Employees Table
CREATE TABLE employees (
    employee_id     SMALLINT NOT NULL,
    last_name       VARCHAR2(20) NOT NULL,
    first_name      VARCHAR2(10) NOT NULL,
    emp_title       VARCHAR2(30),
    birth_date      DATE,
    hire_date       DATE,
    address_id      SMALLINT,
    notes           VARCHAR2(500),
    reports_to      SMALLINT,
    CONSTRAINT pk_employees PRIMARY KEY (employee_id),
    CONSTRAINT fk_employees_reports_to FOREIGN KEY (reports_to) REFERENCES employees(employee_id),
    CONSTRAINT fk_employees_address FOREIGN KEY (address_id) REFERENCES address(address_id)
);

-- Suppliers Table
CREATE TABLE suppliers (
    supplier_id     SMALLINT NOT NULL,
    company_name    VARCHAR2(40) NOT NULL,
    contact_name    VARCHAR2(30),
    contact_title   VARCHAR2(30),
    address_id      SMALLINT,
    fax             VARCHAR2(24),
    homepage        VARCHAR2(500),
    CONSTRAINT pk_suppliers PRIMARY KEY (supplier_id),
    CONSTRAINT fk_suppliers_address FOREIGN KEY (address_id) REFERENCES address(address_id)
);

-- Shippers Table
CREATE TABLE shippers (
    shipper_id      SMALLINT NOT NULL,
    company_name    VARCHAR2(40) NOT NULL,
    phone           VARCHAR2(24),
    CONSTRAINT pk_shippers PRIMARY KEY (shipper_id)
);

-- Orders Table
CREATE TABLE orders (
    order_id        SMALLINT NOT NULL,
    customer_id     SMALLINT,
    employee_id     SMALLINT,
    order_date      DATE,
    required_date   DATE,
    shipped_date    DATE,
    ship_via        SMALLINT,
    freight         NUMBER(10,2),
    ship_name       VARCHAR2(40),
    ship_address_id SMALLINT,
    CONSTRAINT pk_orders PRIMARY KEY (order_id),
    CONSTRAINT fk_orders_customer FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    CONSTRAINT fk_orders_employee FOREIGN KEY (employee_id) REFERENCES employees(employee_id),
    CONSTRAINT fk_orders_shipper FOREIGN KEY (ship_via) REFERENCES shippers(shipper_id),
    CONSTRAINT fk_orders_ship_address FOREIGN KEY (ship_address_id) REFERENCES address(address_id)
);

-- Products Table
CREATE TABLE products (
    product_id          SMALLINT NOT NULL,
    product_name        VARCHAR2(40) NOT NULL,
    supplier_id         SMALLINT,
    category_id         SMALLINT,
    quantity_per_unit   VARCHAR2(20),
    unit_price          NUMBER(10,3),
    units_in_stock      SMALLINT,
    units_on_order      SMALLINT,
    discontinued        INTEGER NOT NULL,
    CONSTRAINT pk_products PRIMARY KEY (product_id),
    CONSTRAINT fk_products_category FOREIGN KEY (category_id) REFERENCES categories(category_id),
    CONSTRAINT fk_products_supplier FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)
);

-- Order_Details Table
CREATE TABLE order_details (
    order_id    SMALLINT NOT NULL,
    product_id  SMALLINT NOT NULL,
    unit_price  NUMBER(10,2) NOT NULL,
    quantity    SMALLINT NOT NULL,
    discount    NUMBER(10,2) NOT NULL,
    CONSTRAINT pk_order_details PRIMARY KEY (order_id, product_id),
    CONSTRAINT fk_order_details_product FOREIGN KEY (product_id) REFERENCES products(product_id),
    CONSTRAINT fk_order_details_order FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

-- Payments Table
CREATE TABLE payments (
    payment_id      NUMBER GENERATED BY DEFAULT AS IDENTITY,
    order_id        SMALLINT NOT NULL,
    payment_date    DATE NOT NULL,
    amount          NUMBER(10, 2) NOT NULL,
    payment_method  VARCHAR2(20) CHECK (payment_method IN ('Credit Card', 'Bank Transfer', 'Cash', 'EFT')),
    status          SMALLINT DEFAULT 0,
    CONSTRAINT pk_payments PRIMARY KEY (payment_id),
    CONSTRAINT fk_payments_order FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

-- Returns Table
CREATE TABLE returns (
    return_id   NUMBER GENERATED BY DEFAULT AS IDENTITY,
    order_id    SMALLINT NOT NULL,
    product_id  SMALLINT NOT NULL,
    return_date DATE NOT NULL,
    reason      VARCHAR2(255),
    approved    CHAR(1) DEFAULT 'N' CHECK (approved IN ('Y', 'N')),
    quantity    SMALLINT DEFAULT 1 CHECK (quantity > 0),
    CONSTRAINT pk_returns PRIMARY KEY (return_id),
    CONSTRAINT fk_returns_order FOREIGN KEY (order_id) REFERENCES orders(order_id),
    CONSTRAINT fk_returns_product FOREIGN KEY (product_id) REFERENCES products(product_id)
);